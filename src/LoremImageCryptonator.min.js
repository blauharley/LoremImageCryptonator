/*
*	Copyright (C) 2014 Franz Josef Brünner
*	
*	This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 3 of the License, or
*   (at your option) any later version.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.

*   You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.

*   Dieses Programm ist Freie Software: Sie können es unter den Bedingungen
*   der GNU General Public License, wie von der Free Software Foundation,
*   Version 3 der Lizenz oder (nach Ihrer Wahl) jeder neueren
*   veröffentlichten Version, weiterverbreiten und/oder modifizieren.

*   Dieses Programm wird in der Hoffnung, dass es nützlich sein wird, aber
*   OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
*   Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
*   Siehe die GNU General Public License für weitere Details.

*   Sie sollten eine Kopie der GNU General Public License zusammen mit diesem
*   Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
	
*/

function PixelData(e){this._init(e)}function ByteCalculator(){}function LoremImageCryptonator(){this._byteCal=new ByteCalculator}PixelData.prototype.setImgage=function(e){this._init(e);return this};PixelData.prototype.getFormatedPixelData=function(e){if(!this._canvasimg){throw new Error("Runtime-Error: private varibale _canvasimg not set!")}e(this._canvasimg.getContext("2d").getImageData(0,0,this._canvasimg.width,this._canvasimg.height))};PixelData.prototype.getImgWidth=function(){return this._img.width};PixelData.prototype.getImgHeight=function(){return this._img.height};PixelData.prototype._init=function(e){if(e){this._img=e;this._loadImg()}};PixelData.prototype._loadImg=function(){this._canvasimg=document.createElement("canvas");with(this._canvasimg){width=this._img.width;height=this._img.height;getContext("2d").drawImage(this._img,0,0)}};ByteCalculator.prototype.getStringFromBytes=function(e){var t=[];for(var n=0;n<e.length;){t.push((e[n++]&255)<<8|e[n++]&255)}return String.fromCharCode.apply(null,t)};ByteCalculator.prototype.getBytesFromString=function(e){var t=[];for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);t.push(r>>>8,r&255)}return t};ByteCalculator.prototype.decimal2binary=function(e){var t=e.toString("2");return this._padString(t)};ByteCalculator.prototype.binary2decimal=function(e){var t=0;var n=this._padString(String(e)).split("").reverse();n.forEach(function(e,n){if(e==="1"){t+=Math.pow(2,n)}});return t};ByteCalculator.prototype._padString=function(e){return(new Array(Math.abs(9-e.length))).join("0").concat(e)};LoremImageCryptonator.prototype.setImage=function(e){if(!e||!(e instanceof Image)){throw new Error("Argument-Error: @param image not overloaded!")}this._pdata=new PixelData(e)};LoremImageCryptonator.prototype.getCryptoImage=function(e,t){var n=e.text||"";var r=this._getOptions(e.mode,e.channel);this._pdata.getFormatedPixelData(function(e){var i=e;var s=i.data;for(var o=0;o<n.length;o++){var u=n[o];var a=this._byteCal.decimal2binary(this._byteCal.getBytesFromString(u)[1]);for(var f=o*a.length*4,l=0;f<a.length*4+o*a.length*4&&f<s.length;f+=4){var c=s[f+r.channel];if(r.mode=="slow"){var h=this._byteCal.decimal2binary(c).split("");h[h.length-1]=a[l++];h=h.join("");var p=this._byteCal.binary2decimal(h);s[f+r.channel]=p}else{var p=this._byteCal.binary2decimal(a);s[f+r.channel]=p;break}}}if(r.mode=="slow"){s[f+r.channel]=0;s[f+r.channel+4]=255}else{s[f+r.channel+32]=0;s[f+r.channel+64]=255}this._pdata2img(i,t)}.bind(this))};LoremImageCryptonator.prototype.getTextFromCryptoImage=function(e,t){var n={};if(arguments[0].constructor==Object){n=arguments[0]}n=this._getOptions(n.mode,n.channel);if(arguments[0]instanceof Image||arguments[0].nodeName==="IMG"){t=arguments[0]}else if(arguments[1]instanceof Image||arguments[1].nodeName==="IMG"){t=arguments[1]}if(!(t instanceof Image)&&t.nodeName!=="IMG"){throw new Error("Argument-Error: @param cryptimg not overloaded!")}var r="";var i="";var s=-1;var o=this._img2pdata(t);var u=n.mode=="slow"?4:32;for(var a=0,f=0;a<o.data.length;a+=u){var l=o.data[a+n.channel];if(s==0&&l==255){break}if(n.mode=="slow"){if(a%32===0&&a>0){var c=String.fromCharCode(this._byteCal.binary2decimal(i));r+=c;i=""}var h=this._byteCal.decimal2binary(l).split("");i+=h[h.length-1]}else{var c=String.fromCharCode(l);r+=c}s=l}return r};LoremImageCryptonator.prototype._pdata2img=function(e,t){var n=document.createElement("canvas");n.width=this._pdata.getImgWidth();n.height=this._pdata.getImgHeight();n.getContext("2d").putImageData(e,0,0);var r=new Image;r.onload=function(){t(r)};r.src=n.toDataURL("image/png")};LoremImageCryptonator.prototype._img2pdata=function(e){var t=document.createElement("canvas");t.width=e.width;t.height=e.height;t.getContext("2d").drawImage(e,0,0);return t.getContext("2d").getImageData(0,0,t.width,t.height)};LoremImageCryptonator.prototype._getOptions=function(e,t){t=t=="red"?0:t=="green"?1:t=="blue"?2:3;e=e||"slow";return{mode:e,channel:t}}